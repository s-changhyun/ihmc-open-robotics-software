buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "gradle.plugin.us.ihmc.gradle:ihmc-build:0.0.19"
  }
}

apply plugin: "us.ihmc.gradle.ihmc-build"

if(!rootProject.name.equals('IHMCOpenRoboticsSoftware')) { evaluationDependsOn(':IHMCOpenRoboticsSoftware') }

sourceCompatibility = 1.8
version = "${getOpenRoboticsSoftwareProject().version}"
project.ext.fullVersion = "${getOpenRoboticsSoftwareProject().ext.fullVersion}"
project.ext.vcsUrl = "${getOpenRoboticsSoftwareProject().ext.vcsUrl}"
project.ext.licenseURL = "http://www.apache.org/licenses/LICENSE-2.0.txt"
project.ext.licenseName = "Apache License, Version 2.0"
project.ext.bintrayLicenseName = "Apache-2.0"


repositories ihmc.ihmcDefaultArtifactProxies()

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven {
        url "http://artifactory.ihmc.us/artifactory/thirdparty/"
    }
}

def strings = ['ihmc', 'robotics']
ihmc.configureForIHMCOpenSourceBintrayPublish(false, "mavenJava", "maven-release", strings)

configurations {
    all*.exclude group: 'org.bytedeco', module: 'javacpp-presets'
}

dependencies {
	testCompile group: 'junit', name: 'junit', version: '4.11'

    compile group: 'us.ihmc', name: 'euclid-core', version: '0.4.2'
    compile group: 'us.ihmc.thirdparty.org.opencv', name: 'opencv', version: '3.1.0-160510'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'us.ihmc', name: 'IHMCNativeLibraryLoader', version: '1.0'
    compile group: 'org.georegression', name: 'georegression', version: '0.11'
    compile group: 'org.ejml', name: 'core', version: '0.30'
    compile group: 'org.ejml', name: 'dense64', version: '0.30'
    compile group: 'net.java.dev.jna', name: 'jna', version: '4.1.0'
    compile group: 'org.boofcv', name: 'geo', version: '0.24.1'
    compile group: 'org.boofcv', name: 'ip', version: '0.24.1'
    compile group: 'org.ros.rosjava_core', name: 'rosjava', version: '0.2.1'
    compile group: 'org.ros.rosjava_bootstrap', name: 'message_generation', version: '0.2.1'
    compile group: 'org.ros.rosjava_messages', name: 'std_msgs', version: '0.5.9'
    compile group: 'org.ros.rosjava_messages', name: 'geometry_msgs', version: '1.11.7'
    compile group: 'org.ros.rosjava_messages', name: 'sensor_msgs', version: '1.11.7'
    compile group: 'org.ros.rosjava_messages', name: 'std_srvs', version: '1.11.1'
    compile group: 'org.ros.rosjava_messages', name: 'people_msgs', version: '1.0.4'
    compile group: 'us.ihmc.thirdparty.jme', name: 'jme3-core', version: '3.1.0-internal4'
    compile group: 'org.lwjgl.lwjgl', name: 'lwjgl', version: '2.9.3'
    compile group: 'org.boofcv', name: 'visualize', version: '0.24.1'
    compile group: 'org.boofcv', name: 'io', version: '0.24.1'
    compile group: 'org.boofcv', name: 'recognition', version: '0.24.1'
    compile group: 'org.boofcv', name: 'calibration', version: '0.24.1'
    compile group: 'org.bytedeco.javacpp-presets', name: 'caffe', version: 'master-1.2'
    compile group: 'org.bytedeco.javacpp-presets', name: 'caffe', version: 'master-1.2', classifier: 'linux-x86_64'
    compile 'org.bytedeco.javacpp-presets:opencv:3.1.0-1.2'
    compile group: 'org.bytedeco.javacpp-presets', name: 'opencv', version: '3.1.0-1.2', classifier: 'linux-x86_64'
    compile group: 'us.ihmc.ihmcPerception', name: 'valvenet', version: '0.0.4'
    compile group: 'us.ihmc.ihmcPerception', name: 'cuda', version: '7.5'
    compile "org.ddogleg:ddogleg:0.7"
    
    testCompile group: 'us.ihmc', name: 'ihmc-continuous-integration-framework', version: '0.9.4'

    compile ihmc.getProjectDependency(":SimulationConstructionSet")
    compile ihmc.getProjectDependency(":IHMCJMonkeyEngineToolkit")
    compile ihmc.getProjectDependency(":IHMCHumanoidRobotics")
	compile ihmc.getProjectDependency(":IHMCCommunication")
    compile ihmc.getProjectDependency(":IHMCROSTools")
	compile ihmc.getProjectDependency(":IHMCWholeBodyController")
    compile ihmc.getProjectDependency(":SensorProcessing")
    compile ihmc.getProjectDependency(":IHMCRobotModels")
    compile ihmc.getProjectDependency(":IHMCJavaToolkit")
    compile ihmc.getProjectDependency(":IHMCJavaExtensions")
    compile ihmc.getProjectDependency(":IHMCRoboticsToolkit")
    compile ihmc.getProjectDependency(":IHMCGraphicsDescription")
	testCompile ihmc.getProjectTestDependency(":IHMCRoboticsToolkit")
	testCompile ihmc.getProjectTestDependency(":IHMCJavaExtensions")
    testCompile ihmc.getProjectTestDependency(":SimulationConstructionSet")
}
jar {
    manifest {
        attributes(
                "Created-By": "IHMC Gradle Build Script",
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Implementation-Vendor": "IHMC",

                "Bundle-Name": project.name,
                "Bundle-Version": project.version,
                "Bundle-License": "${project.ext.licenseURL}",
                "Bundle-Vendor": "IHMC")
    }
}
