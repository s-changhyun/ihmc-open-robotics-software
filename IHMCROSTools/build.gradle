buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "gradle.plugin.us.ihmc.gradle:ihmc-build:0.0.19"
  }
}

apply plugin: "us.ihmc.gradle.ihmc-build"

if(!rootProject.name.equals('IHMCOpenRoboticsSoftware')) { evaluationDependsOn(':IHMCOpenRoboticsSoftware') }

sourceCompatibility = 1.8
version = "${getOpenRoboticsSoftwareProject().version}"
project.ext.fullVersion = "${getOpenRoboticsSoftwareProject().ext.fullVersion}"
project.ext.vcsUrl = "${getOpenRoboticsSoftwareProject().ext.vcsUrl}"
project.ext.licenseURL = "http://www.apache.org/licenses/LICENSE-2.0.txt"
project.ext.licenseName = "Apache License, Version 2.0"
project.ext.bintrayLicenseName = "Apache-2.0"

project.sourceSets {
    main {
        java {
            srcDirs = ['src', 'generated-src']
        }

        resources {
            srcDirs = ['src', 'resources']
        }
    }

    test {
        java {
            srcDirs = ['test']
        }

        resources {
            srcDirs = ['testResources']
        }
    }
}


repositories ihmc.ihmcDefaultArtifactProxies()

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven {
        url "http://artifactory.ihmc.us/artifactory/thirdparty/"
    }
}

def strings = ['ihmc', 'robotics']
ihmc.configureForIHMCOpenSourceBintrayPublish(false, "mavenJava", "maven-release", strings)

dependencies {
	testCompile group: 'junit', name: 'junit', version: '4.11'

    compile group: 'io.netty', name: 'netty', version: '3.5.8.Final'
    compile group: 'us.ihmc', name: 'euclid-core', version: '0.4.2'
    compile group: 'com.google.guava', name: 'guava', version: '18.0'
    compile group: 'org.apache.commons', name: 'com.springsource.org.apache.commons.io', version: '1.4.0'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'org.boofcv', name: 'geo', version: '0.24.1'
    compile group: 'org.reflections', name: 'reflections', version: '0.9.10'
    
    testCompile group: 'us.ihmc', name: 'ihmc-continuous-integration-framework', version: '0.9.4'

	compile group: 'org.ros.rosjava_core', name: 'rosjava', version: '0.2.1'
	compile group: 'org.ros.rosjava_bootstrap', name: 'message_generation', version: '0.2.1'
	compile group: 'org.ros.rosjava_messages', name: 'std_msgs', version: '0.5.9'
	compile group: 'org.ros.rosjava_messages', name: 'test_rosmaster', version: '1.11.10'
	compile group: 'org.ros.rosjava_messages', name: 'sensor_msgs', version: '1.11.7'
	compile group: 'org.ros.rosjava_messages', name: 'dynamic_reconfigure', version: '1.5.38'
	compile group: 'org.ros.rosjava_messages', name: 'multisense_ros', version: '3.4.2'
    compile group: 'org.ros.rosjava_messages', name: 'rosgraph_msgs', version: '1.11.1'
    compile group: 'org.ros.rosjava_messages', name: 'geometry_msgs', version: '1.11.7'
    compile group: 'org.ros.rosjava_messages', name: 'nav_msgs', version: '1.11.7'
    compile group: 'org.ros.rosjava_messages', name: 'tf2_msgs', version: '0.5.9'
    compile group: 'org.ros.rosjava_messages', name: 'tf', version: '1.10.8'

 	compile ihmc.getProjectDependency(":IHMCCommunication")
	compile ihmc.getProjectDependency(":IHMCJavaToolkit")
    compile ihmc.getProjectDependency(":IHMCJavaExtensions")
	compile ihmc.getProjectDependency(":IHMCRoboticsToolkit")

	testCompile ihmc.getProjectTestDependency(":IHMCRoboticsToolkit")
	testCompile ihmc.getProjectTestDependency(":IHMCJavaExtensions")
}
jar {
    manifest {
        attributes(
                "Created-By": "IHMC Gradle Build Script",
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Implementation-Vendor": "IHMC",

                "Bundle-Name": project.name,
                "Bundle-Version": project.version,
                "Bundle-License": "${project.ext.licenseURL}",
                "Bundle-Vendor": "IHMC")
    }
}
