buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "gradle.plugin.us.ihmc.gradle:ihmc-build:0.0.19"
  }
}

apply plugin: "us.ihmc.gradle.ihmc-build"

apply plugin: 'java-library-distribution'

if(!rootProject.name.equals('IHMCOpenRoboticsSoftware')) { evaluationDependsOn(':IHMCOpenRoboticsSoftware') }

sourceCompatibility = 1.8
version = "${getOpenRoboticsSoftwareProject().version}"
project.ext.fullVersion = "${getOpenRoboticsSoftwareProject().ext.fullVersion}"
project.ext.vcsUrl = "${getOpenRoboticsSoftwareProject().ext.vcsUrl}"
project.ext.licenseURL = "http://www.apache.org/licenses/LICENSE-2.0.txt"
project.ext.licenseName = "Apache License, Version 2.0"
project.ext.bintrayLicenseName = "Apache-2.0"

repositories ihmc.ihmcDefaultArtifactProxies()

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven {
        url "http://artifactory.ihmc.us/artifactory/thirdparty/"
    }
}

def strings = ['ihmc', 'robotics']
ihmc.configureForIHMCOpenSourceBintrayPublish(false, "mavenJava", "maven-release", strings)

dependencies {
	testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile group: 'us.ihmc', name: 'ihmc-continuous-integration-framework', version: '0.9.4'
	compile group: 'us.ihmc', name: 'euclid-core', version: '0.4.2'

	compile group: 'net.jafama', name: 'jafama', version: '2.1.0'
   	compile group: 'us.ihmc.thirdparty.jinput', name: 'jinput', version: '160414'
	compile group: 'us.ihmc', name: 'IHMCVideoCodecs', version: '2.0.12'
	compile group: 'org.jfree', name: 'jfreechart', version: '1.0.17'
	compile group: 'org.apache.xmlgraphics', name: 'batik-svggen', version: '1.7'
	compile group: 'org.apache.xmlgraphics', name: 'batik-dom', version: '1.7'
	compile group: 'net.sourceforge.jexcelapi', name: 'jxl', version: '2.6.12'
	compile group: 'com.github.wendykierp', name: 'JTransforms', version: '3.1'
	compile group: 'org.apache.commons', name: 'commons-math3', version: '3.3'
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
	compile group: 'org.apache.pdfbox', name: 'pdfbox', version: '1.8.4'
	compile group: 'net.sourceforge.jmatio', name: 'jmatio', version: '1.0'
	compile group: 'org.ejml', name: 'core', version: '0.30'
	compile group: 'junit', name: 'junit', version: '4.11'
	compile group: 'xml-apis', name: 'xml-apis', version: '2.0.2'
	compile group: 'com.badlogicgames.gdx', name: 'gdx-bullet', version: '1.9.4'
	compile group: 'com.badlogicgames.gdx', name: 'gdx', version: '1.9.4'
	compile group: 'com.google.guava', name: 'guava', version: '18.0'

	compile group: 'org.easytesting', name: 'fest', version: '1.0.3'
	compile('org.easytesting:fest-swing:1.2.1' )
	{
		exclude group: 'org.easytesting', module: 'fest'
	}

    runtime group: 'com.badlogicgames.gdx', name: 'gdx-bullet-platform', version: '1.9.4', classifier: 'natives-desktop' // runtime?

	compile ihmc.getProjectDependency(":IHMCJMonkeyEngineToolkit")
	compile ihmc.getProjectDependency(":IHMCRobotDescription")
	compile ihmc.getProjectDependency(":ParameterOptimization")
	compile ihmc.getProjectDependency(":IHMCCommunication")
	compile ihmc.getProjectDependency(":IHMCJavaToolkit")
    compile ihmc.getProjectDependency(":IHMCJavaExtensions")
	compile ihmc.getProjectDependency(":IHMCRoboticsToolkit")
    compile ihmc.getProjectDependency(":IHMCGraphicsDescription")
    compile ihmc.getProjectDependency(":IHMCSwingPlotting")
    compile ihmc.getProjectDependency(":IHMCGeometry")

    testCompile group: 'org.ejml', name: 'dense64', version: '0.30'
    testCompile group: 'gov.nist.math', name: 'jama', version: '1.0.3'

	testCompile ihmc.getProjectTestDependency(":IHMCRoboticsToolkit")
	testCompile ihmc.getProjectTestDependency(":IHMCJavaExtensions")
}

jar {
    manifest {
        attributes(
                "Created-By": "IHMC Gradle Build Script",
                "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Implementation-Vendor": "IHMC",

                "Bundle-Name": project.name,
                "Bundle-Version": project.version,
                "Bundle-License": "${project.ext.licenseURL}",
                "Bundle-Vendor": "IHMC")
    }
}

distributions {
    main {
        baseName = 'SimulationConstructionSet'
    }
}
